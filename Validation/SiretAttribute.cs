// ‚úÖ On utilise DataAnnotations pour cr√©er un attribut de validation personnalis√©
using System.ComponentModel.DataAnnotations;

namespace Synoptis.API.Validation
{
    /// <summary>
    /// Valide un SIRET : 14 chiffres + contr√¥le Luhn.
    /// </summary>
    [AttributeUsage(AttributeTargets.Property)] // üëâ Cet attribut pourra √™tre appliqu√© sur une propri√©t√© (comme Company.Siret)
    public sealed class SiretAttribute : ValidationAttribute // üëâ On h√©rite de ValidationAttribute pour cr√©er notre r√®gle custom
    {
        // M√©thode appel√©e automatiquement par le framework quand il valide la propri√©t√©
        protected override ValidationResult? IsValid(object? value, ValidationContext validationContext)
        {
            // On r√©cup√®re la valeur (cast en string) et on enl√®ve les espaces √©ventuels
            var s = (value as string)?.Trim();

            // Si la valeur est null ou vide ‚Üí pas d‚Äôerreur (√ßa permet de rendre le champ optionnel)
            if (string.IsNullOrWhiteSpace(s))
                return ValidationResult.Success;

            // V√©rification 1 : longueur = 14 ET uniquement des chiffres
            if (s.Length != 14 || !s.All(char.IsDigit))
                return new ValidationResult("Le SIRET doit contenir exactement 14 chiffres.");

            // V√©rification 2 : Contr√¥le de validit√© avec l‚Äôalgorithme de Luhn
            int sum = 0;
            for (int i = 0; i < s.Length; i++)
            {
                // On convertit le caract√®re en chiffre
                int digit = s[i] - '0';

                // Convention du SIRET : on double les chiffres en position paire (index 0-based)
                if ((i % 2) == 0)
                    digit *= 2;

                // Si le double d√©passe 9, on soustrait 9 (r√®gle de Luhn)
                if (digit > 9)
                    digit -= 9;

                // On ajoute le r√©sultat √† la somme totale
                sum += digit;
            }

            // La somme totale doit √™tre un multiple de 10
            if (sum % 10 != 0)
                return new ValidationResult("SIRET invalide (contr√¥le Luhn).");

            // Si toutes les r√®gles sont pass√©es ‚Üí validation OK
            return ValidationResult.Success;
        }
    }
}
